//struct结构体
//struct Book
//{
//	char name[20];
//	short price;
//};
//
//int main()
//{
//	struct Book one = { "C语言程序设计",55 };
//	struct Book* p = &one;
//	printf("%s\n", p->name);
//	printf("%d\n", p->price);
//	/*printf("%p\n", *p);
//	printf("%d\n", (*p).price);*/
//	/*printf("书名：%s\n", one.name);
//	printf("价格:%d元\n",one.price);
//	one.price = 100;
//	printf("修改后的价格:%d元\n", one.price);*/
//	return 0;
//}

//static(改变变量)
//int sum(int a)
//{
//	int c = 0;
//	static int b = 3;
//	c + 1;
//	b + 2;
//	return(a + b + c);
//}
//
//int main()
//{
//	int i;
//	int a = 2;
//	for (i = 0; i < 5; i++)
//	{
//		printf("%d,", sum(a));
//	}
//	return 0;
//}

//指针
// 修改其原理
//int main()
//{
//	int a = 10;
//	int* p = &a;
//	*p = 20;
//	printf("%d\n", a);
//	return 0;
//}

//函数比大小和定义宏比大小
//int Max(int x, int y)
//{
//	if (x > y)
//		return x;
//	else
//		return y;
//}
//#define MAX(X,Y) (X>Y?X:Y)
//
//int main()
//{
//	int a = 10;
//	int b = 20;
//	int max = Max(a, b);
//	printf("max=%d\n", max);
//	max = MAX(a, b);
//	printf("max=%d\n", max);
//	return 0;
//}

//static修饰局部变量，使生命周期延长
// 修饰全局变量，使变量的作用域只能在内部使用
// 修饰函数，改变了函数的连接属性
// 普通函数具有外部连接属性
// 外部连接属性——内部连接属性
//void test()
//{
//	static int a = 1;
//	a++;
//	printf("a=%d\n", a);
//}
//
//int main()
//{
//	int i = 0;
//	while (i < 5)
//	{
//		test();
//		i++;
//	}
//	return 0;
//}

//int main()
//{
//	typedef unsignde int u_int;
//	unsigned int num1 = 20;
//	u_int num2 = 30;
//	printf("%d\n", num2);
//	return 0;
//}

//~取反
//int main()
//{
//	int a = 0;
//	111111111111111111111111111111101
//	int b = ~a;
//	printf("%d\n", b,a);
//	return 0;
//}

//用函数求两个数的最大值
//int Max(int x, int y)
//{
//	if (x > y)
//		return x;
//	else
//		return y;
//}
//
//int main()
//{
//	int num1 = 10;
//	int num2 = 20;
//	int max = 0;
//	max = Max(num1, num2);
//	printf("%d\n",max);
//	return 0;
//}

//int main()
//{
//	int a = -2;
//	int b = -a;
//	int arr[10] = { 0 };
//	int sz = 0;
//	sz = sizeof(arr) / sizeof(arr[0]);
//	printf("%d\n", b);
//	printf("%d\n", !b);
//	printf("%d\n", sizeof(arr));
//	printf("%d\n", sz);
//	return 0;
//}

//int main()
//{
//	int a = 1;
//	int b = a << 1;
//	printf("%d\n", b);
//	return 0;
//}

//int main()
//{
//	int i = 0;
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
//	while (i < 10) {
//		printf("%d\n", arr[i]);
//		i++;
//	}
//	/*printf("%d\n",arr[4]);*/
//	return 0;
//}

//int Add(int x, int y)
//{
//	int z = x + y;
//	return z;
//}

//int main()
//{
//	int num1 = 0;
//	int num2 = 0;
//	int sum = 0;
//	scanf("%d%d", &num1, &num2);
//	sum = Add(num1, num2);
//	printf("%d\n",sum);
//	return 0;
//}

//int main()
//{
//	int line = 0;
//	printf("加入比特\n");
//	while (line < 2000) 
//	{
//		printf("敲一行代码:%d\n",line);
//		line++;
//	}
//	if (line >= 20000)
//		printf("好offer\n");
//	else
//		printf("考红薯\n");
//	return 0;
//}

//int main()
//{
//	int input = 0;
//	printf("你会好好学习吗？（好好学习(1)/不好好学习(0))>:");
//	scanf("%d", &input);
//	if (input == 1)
//		printf("好offer\n");
//	else
//		printf("卖红薯\n");
//	return 0;
//}

//int main()
//{
//	printf("c:\test\328\test\n");
//	printf("%d\n", strlen("c:\test\32\test\n"));
//	printf("%c\n",'\182');
//	printf("%d\n", strlen("\18"));
//	return 0;
//}

//int main()
//{
//	char arr1[] = "abc";
//	char arr2[] = { 'a','b','c','\0'};
//	printf("%d\n", strlen(arr1));
//	printf("%d\n", strlen(arr2));
//	return 0;
//}

//int main()
//{
//	char arr1[] = "abc";
//	char arr2[] = { 'a','b','c',};
//	printf("%s\n", arr1);
//	printf("%s\n", arr2);
//	return 0;
//}

//enum color
//{
//	RED,
//	YELLOW,
//	BLUE
//};
//
//int main()
//{
//	printf("%d\n", RED);
//	printf("%d\n", YELLOW);
//	printf("%d\n", BLUE);
//	return 0;
//}

//enum Sex {
//	MALE,
//	FEMALE,
//	SECRET
//};

//int main()
//{
//	printf("%d\n", MALE);
//	printf("%d\n", FEMALE);
//	printf("%d\n", SECRET);
//}

//int main()
//{
//	int x = 10;
//	int num[10] = { 0 }; 
//	x = 888;
//	/*printf("%d\n", x);*/
//	x = 100;
//	return 0;
//}

//int main()
//{
//	int num1 = 0;
//	int num2 = 0;
//	int sum = 0;
//	scanf("%d%d", &num1, &num2);
//	sum = num1 + num2;
//	printf("sum=%d\n", sum);
//	return 0;
//}

//int main()
//{
//	printf("%d\n", sizeof(char));
//	printf("%d\n", sizeof(short));
//	printf("%d\n", sizeof(int));
//	printf("%d\n", sizeof(long));
//	printf("%d\n", sizeof(long long));
//	printf("%d\n", sizeof(float));
//	printf("%d\n",sizeof(double));
//	return 0;
//}

//int main()
//{
//	printf("hello\n");
//	return 0;
//}

//int main()
//{
//	char ch='A';
//	printf("%c\n",ch);
//	return 0;
//}

//int main()
//{
//	int age = 19;
//	printf("%d", age);
//	return 0;
//}

